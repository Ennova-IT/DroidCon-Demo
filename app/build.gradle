apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 'Google Inc.:Google APIs:23'
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "it.ennova.droidcondemo"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "SERVICE_NAME", "\"ZeRXconf Demo\""
        buildConfigField "String", "SERVICE_LAYER", "\"_zerxconf._tcp.\""
        buildConfigField "int", "SERVICE_PORT", "5000"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

String getJavaHome(String version) {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine "/usr/libexec/java_home", "-v", version
        standardOutput = stdout;
    }
    return stdout.toString().trim()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:2.0.6'
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:2.0.41-beta"
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile 'com.android.support:support-annotations:23.1.1'
    androidTestCompile "org.mockito:mockito-core:2.0.41-beta"
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:support-annotations:23.1.1'
    compile 'com.google.android.gms:play-services-gcm:8.4.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.0'
    compile 'com.trello:rxlifecycle:0.4.0'
    compile 'com.trello:rxlifecycle-components:0.4.0'
    compile 'com.jakewharton.rxbinding:rxbinding:0.3.0'
    compile 'com.google.code.gson:gson:2.5'
    compile 'com.squareup.okhttp3:okhttp:3.0.1'

    compile 'com.koushikdutta.async:androidasync:2.1.6'
    compile 'com.github.Ennova-IT:ZeRXconf:1.0.2'
}

import org.gradle.internal.os.OperatingSystem;

task findOs {
    doLast {
        if (OperatingSystem.current().isMacOsX()) {
            println("Adding retrolmbda")
            retrolambda {
                jdk System.getenv("JAVA8_HOME") ?: getJavaHome("1.8")
                oldJdk System.getenv("JAVA7_HOME") ?: getJavaHome("1.7")
            }
        }
    }
}
preBuild.dependsOn findOs
